Domínio "quebrado" em contextos menores.

3 microserviços: Loja, Fornecedor e Transportador

Um microsserviço é a implementação de um contexto

-------------------------------------------

Load Balancing é o processo de distribuir as requisições vindas dos usuários para as várias instâncias disponíveis.

Funcionamento do Client Side Load Balancing:

A aplicação cliente conhece as instâncias disponíveis e, usando algum algoritmo de rotação do Ribbon, 
acessa uma instância diferente a cada requisição do usuário.

-------------------------------------------

Requisição inicial (utilizando Ribbon)


@Service
public class CompraService {

	@Autowired
	private RestTemplate client;
	
	@Autowired
	private DiscoveryClient eurekaClient;
	
	public void realizaCompra(CompraDTO compra) {
		
		ResponseEntity<InfoFornecedorDTO> exchange = 
				client.exchange("http://fornecedorms/info/" + compra.getEndereco().getEstado(),
				HttpMethod.GET, null, InfoFornecedorDTO.class);
		
		eurekaClient.getInstances("fornecedorms").stream()
		.forEach(fornecedorms -> {
			System.out.println(fornecedorms.getHost() + ":" + fornecedorms.getPort());
		});
		
		System.out.println(exchange.getBody().getEndereco());
		
	}
}

--------------------------------------------

Requisição (com Spring Feign)

Anotar classe main com
@EnableFeignClients

Criar interface

@FeignClient("fornecedorms")
public interface FornecedorClient {

	@GetMapping("/info/{estado}")
	InfoFornecedorDTO getInfoPorEstado(@PathVariable String estado);
	
}

@Service
public class CompraService {
	
	@Autowired
	private FornecedorClient fornecedorClient;

	public void realizaCompra(CompraDTO compra) {
		
		InfoFornecedorDTO info = fornecedorClient.getInfoPorEstado(compra.getEndereco().getEstado());
		
		System.out.println(info.getEndereco());
		
	}

}

----------------------------------------------

O Client Side Load Balancing (CSLB) é o cliente HTTP que decide qual microsserviço recebe a requisição.

Isto é importante, pois pode ter várias instâncias do mesmo serviço no ar.

A configuração do CSLB é feita a partir da anotação @LoadBalanced, na criação do RestTemplate.

Como implementação do CSLB, usamos um projeto chamado Ribbon, que faz parte do Spring Cloud Netflix.

Para descobrir quais clientes existem, podemos injetar a interface DiscoveryClient.

Como alternativa ao RestTemplate, podemos usar o Spring Feign, que já usa o Ribbon para CSLB.

O Spring Feign exige apenas uma interface, com a definição e mapeamento dos métodos que executarão a requisição.

Toda a implementação da interface é gerada pelo Spring Feign.

-----------------------------------------------



